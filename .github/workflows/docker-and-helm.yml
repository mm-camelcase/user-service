name: Build, Dockerize, and Deploy Helm Chart

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Set up JDK 17 (you can change this to the version you're using)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      # Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Save the build artifact (JAR)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: user-jar
          path: build/libs/user-*.jar

  docker:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after 'build' completes

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Download the built artifact (JAR) from the 'build' job
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: user-jar
          path: ./build/libs/

      # Build the Docker image using the downloaded JAR
      - name: Build Docker image
        run: |
          docker build . -t ghcr.io/${{ github.repository }}:latest

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      # Push the Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest

  helm:
    runs-on: ubuntu-latest
    needs: docker  # Ensures this job runs after 'docker' completes

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

    #  Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # Create a Helm chart
    #   - name: Create Helm chart
    #     run: |
    #       helm create user-service
    #       cd user-service
    #       sed -i 's|repository: .*|repository: ghcr.io/${{ github.repository }}|' values.yaml
    #       sed -i 's|tag: .*|tag: latest|' values.yaml

      # Commit the Helm chart and push to GitHub Pages
    #   - name: Commit Helm chart
    #     run: |
    #       git config --global user.name "${{ github.actor }}"
    #       git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          
    #       # Ensure gh-pages branch exists
    #       git fetch origin gh-pages || git checkout --orphan gh-pages
    #       git checkout gh-pages
          
    #       # Use relative path for the Helm chart directory
    #       mkdir -p helm-charts
    #       rm -rf helm-charts/user-service
    #       mv user-service helm-charts/
          
    #       git add helm-charts/
    #       git commit -m "Update Helm chart for ${{ github.sha }}"
    #       git push https://$GITHUB_ACTOR:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} gh-pages

      # Deploy Helm chart to GitHub Pages
    #   - name: Deploy Helm chart
    #     run: |
    #       helm repo index helm-charts/
    #       git add helm-charts/index.yaml
    #       git commit -m "Update Helm repo index"
    #       git push origin gh-pages
          

    # Deploy Helm chart to site repository
    #   - name: Deploy Helm chart
    #     run: |
    #         # Set up git user information
    #         git config --global user.name "${{ github.actor }}"
    #         git config --global user.email "${{ github.actor }}@users.noreply.github.com"

    #         # Create Helm repo index in the 'helm-charts/' directory
    #         mkdir -p helm-charts
    #         helm repo index helm-charts/
            
    #         # Clone the 'site' repository (target repo where Helm chart will be stored)
    #         git clone https://$GITHUB_ACTOR:${{ secrets.GH_PAT }}@github.com/${{ github.repository_owner }}/site.git
    #         cd site

    #         # Move the Helm charts to the 'site' repo
    #         cp -r ../helm-charts/* .
            
    #         # Add, commit, and push the changes to the site repository
    #         git add .
    #         git commit -m "Update Helm repo index for ${{ github.sha }}"
    #         git push origin main

    # Deploy Helm chart to 'site' repository in helm-charts/user-service
      - name: Deploy Helm chart to 'site' repository
        run: |
            # Set up git user information
            git config --global user.name "${{ github.actor }}"
            git config --global user.email "${{ github.actor }}@users.noreply.github.com"

            

            # Clone the 'site' repository (where Helm chart will be stored)
            git clone https://$GITHUB_ACTOR:${{ secrets.GH_PAT }}@github.com/${{ github.repository_owner }}/site.git
            cd site

            # Create the helm-charts/user-service directory if it doesn't exist
            mkdir -p helm-charts/user-service

            # Copy the Helm chart from the current repo into the 'site' repo's helm-charts/user-service directory
            cp -r ../helm/* helm-charts/user-service/

            # Generate or update the Helm repo index
            #helm repo index helm-charts/ --url https://${{ github.repository_owner }}.github.io/site/helm-charts/
            # Generate or update the Helm repo index and place the index.yaml one level up
            helm repo index helm-charts/ --url https://${{ github.repository_owner }}.github.io/site/


            # Add, commit, and push the changes to the 'site' repository
            git add .
            git commit -m "Update Helm chart for user-service from ${{ github.sha }}"
            git push origin main

