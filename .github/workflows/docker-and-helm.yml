name: Build, Dockerize, and Deploy Helm Chart

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Set up JDK 17 (you can change this to the version you're using)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      # Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Save the build artifact (JAR)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: user-jar
          path: build/libs/user-*.jar

  docker:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after 'build' completes

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Download the built artifact (JAR) from the 'build' job
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: user-jar
          path: ./build/libs/

      # Build the Docker image using the downloaded JAR
      - name: Build Docker image
        run: |
          docker build . -t ghcr.io/${{ github.repository }}:latest

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      # Push the Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest

  helm:
    runs-on: ubuntu-latest
    needs: docker  # Ensures this job runs after 'docker' completes

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

    #  Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      
      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  
      - name: Package Helm chart
        run: |
          helm package helm
  
      - name: Authenticate to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
  
      - name: Push Helm chart to GitHub Packages
        run: |
          helm push user-service-0.1.0.tgz oci://ghcr.io/${{ github.repository_owner }}/helm-charts
